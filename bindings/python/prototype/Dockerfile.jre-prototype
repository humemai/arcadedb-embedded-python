# Dockerfile for JRE Bundling Prototype
# Purpose: Analyze JAR dependencies and build minimal JRE for ArcadeDB

# ARG must be before any FROM to be available globally
ARG ARCADEDB_TAG=24.11.1

# Copy ArcadeDB Docker image and extract JARs
# We'll use the full ArcadeDB distribution as source
FROM arcadedata/arcadedb:${ARCADEDB_TAG} AS arcadedb-source

# Back to JRE builder
FROM eclipse-temurin:21-jdk-jammy AS jre-analyzer

WORKDIR /build

# Copy JARs from ArcadeDB
COPY --from=arcadedb-source /home/arcadedb/lib/*.jar /build/jars/

# Define required Java modules for ArcadeDB
# Based on analysis, these are the modules needed
# We use a fixed list for reproducibility
# Note: jdk.zipfs is required for JPype JAR filesystem support
RUN mkdir -p /build/analysis && \
    echo "java.base,java.compiler,java.desktop,java.logging,java.management,java.naming,java.prefs,java.rmi,java.scripting,java.security.jgss,java.security.sasl,java.sql,java.transaction.xa,java.xml,jdk.incubator.vector,jdk.internal.vm.ci,jdk.jfr,jdk.management,jdk.sctp,jdk.unsupported,jdk.zipfs" > /build/analysis/required-modules.txt && \
    echo "=== Required Java Platform Modules ===" && \
    cat /build/analysis/required-modules.txt

# Build minimal JRE with jlink
# Note: We ignore split packages since they're in shaded JARs and not needed in JRE
RUN MODULES=$(cat /build/analysis/required-modules.txt | tr -d '\n') && \
    echo "Building JRE with modules: $MODULES" && \
    jlink --module-path ${JAVA_HOME}/jmods \
          --add-modules ${MODULES} \
          --ignore-signing-information \
          --strip-debug \
          --no-man-pages \
          --no-header-files \
          --compress zip-9 \
          --output /build/minimal-jre && \
    echo "=== JRE Build Complete ===" && \
    du -sh /build/minimal-jre

# Test the minimal JRE
RUN /build/minimal-jre/bin/java -version && \
    echo "=== JRE Version Test Passed ==="

# Final stage - minimal image with results
FROM busybox:latest AS final
COPY --from=jre-analyzer /build/analysis /analysis
COPY --from=jre-analyzer /build/minimal-jre /minimal-jre
COPY --from=jre-analyzer /build/jars /jars
CMD ["/bin/sh"]
